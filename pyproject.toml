[tool.poetry]
name = "pyexample"
version = "1.0.0"
description = "Coding example!"
authors = ["Viktor Kurti <vp.kurti@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
pytest = "^8.1.1"
pytest-repeat = "^0.9.3"
pytest-html = "^4.1.1"
allure-pytest = "^2.13.3"
requests = "^2.31.0"
invoke = "^2.2.0"
dynaconf = "^3.2.5"
pandas = "^2.2.1"
faker = "^24.3.0"
attrs = "^23.2.0"
assertpy = "^1.1"
jsonschema = "^4.21.1"
pytest-playwright = "^0.4.4"


[tool.poetry.group.dev.dependencies]
pre-commit = "^3.2.0"
commitizen = "^2.42.1"
pylint = "^2.17.0"


[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--alluredir=testruns/reports/allure_results",
    "--html=testruns/reports/pytest_html.html",
    "--self-contained-html",
]
testpaths = ["tests"]
markers = [
    "smoke",
    "UAT",
    "api",
    "gui",
    "testid",
    "component",
    "uat",
    "negative",
]


[tool.commitizen]
name = "cz_conventional_commits"
version = "1.0.0"
tag_format = "$version"
version_files = ["pyproject.toml:version"]
bump_message = "bump: version $current_version â†’ $new_version"
update_changelog_on_bump = true
annotated_tag = true


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
